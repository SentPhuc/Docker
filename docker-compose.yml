version: "3.5"

services:
  nginx:
    container_name: "nginx"
    build:
      context: ./nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - ${SOURCE_CODE_PATH}:/srv
    ports:
      - 80:80
      - 443:443
    networks:
      - topdev

  php-fpm-74:
    container_name: "php-fpm-74"
    user: 'www-data:www-data'
    build:
      context: ./php-fpm-74
      args:
        - uid=1000
        - user=cuongdang
    volumes:
      - ${SOURCE_CODE_PATH}:/srv:rw
    networks:
      - topdev

  php-fpm-81:
    build:
      context: ./php-fpm-81
      args:
        - uid=1000
        - user=cuongdang
    container_name: "php-fpm-81"
    volumes:
      - ${SOURCE_CODE_PATH}:/srv:rw
    networks:
      - topdev

  node-resume-dashboard:
    build:
      context: ./node-resume-dashboard
    cpus: 0.5
    ports:
      - 8802:8802
    container_name: "node-resume-dashboard"
    volumes:
      - ${SOURCE_CODE_PATH}/resume-dashboard:/srv:rw
    networks:
      - topdev
    depends_on:
      - node14
  
  node-frontend-v3:
    build:
      context: ./frontend-v3
    ports:
      - 3000:3000
      - 4000:4000
    container_name: "node-frontend-v3"
    command: /bin/sh -c "startup.sh"
    volumes:
      - ${SOURCE_CODE_PATH}/frontend-v3:/srv:rw
    networks:
      - topdev
    depends_on:
      - node14
  
  redis:
    container_name: "redis"
    image: "redis"
    ports:
      - 6379:6379
    networks:
      - topdev

  rabbitmq:
    container_name: "rabbitmq"
    image: "rabbitmq:3.9-management-alpine"
    ports:
      - 5673:5672
      - 15673:15672
    networks:
      - topdev

  elasticsearch:
    container_name: "elasticsearch"
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.9"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - 9202:9200
    networks:
      - topdev

  mysql:
    container_name: "mysql"
    build:
      context: ./mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/logs:/var/log/mysql
    networks:
      - topdev
  node14:
    container_name: "node14"
    build: 
      context: ./node14
  node16:
    container_name: "node16"
    build: 
      context: ./node16
  devspace:
    container_name: "devspace"
    build: 
      context: ./devspace
      # Check .env file for available values
      target: ${DEV_SPACE_TARGET}
    volumes:
      - ${SOURCE_CODE_PATH}:/srv:rw
    networks:
      - topdev
    depends_on:
      - php-fpm-74
      - php-fpm-81
      - node14
      - node16

networks:
  topdev:
    driver: bridge